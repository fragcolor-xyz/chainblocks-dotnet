name: CI

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  #
  # Build common library
  #
  common-library-build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        build-type: ["Debug", "Release"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Build
        run: |
          dotnet build src/Fragcolor.Chainblocks.Common -c ${{ matrix.build-type }}
      - name: Upload artifact
        if: ${{ matrix.build-type == 'Release' }}
        uses: actions/upload-artifact@v2
        with:
          name: common-library-build-${{ matrix.build-type }}
          path: |
            src/Fragcolor.Chainblocks.Common/bin/${{ matrix.build-type }}/*.nupkg
            src/Fragcolor.Chainblocks.Common/bin/${{ matrix.build-type }}/*.snupkg
          if-no-files-found: error

  #
  # Build cbl dll
  #
  libcbl-build:
    uses: ./.github/workflows/cbl-dll.yml
    with:
      build-type: Release
      bitness: 64bits

  #
  # Test common library
  #
  common-library-test:
    needs: [common-library-build, libcbl-build]
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Download libcbl
        uses: actions/download-artifact@v2
        with:
          name: libcbl-win64-Release
          path: src/Fragcolor.Chainblocks.Common.Tests
      - name: Test
        run: |
          dotnet test src/Fragcolor.Chainblocks.Common.Tests

  #
  # Build Godot sample
  #
  godot-sample-build:
    needs: common-library-build
    runs-on: ubuntu-latest
    env:
      GODOT_VERSION: 3.4.2
      RELEASE_NAME: stable
    container:
      image: barichello/godot-ci:mono-3.4.2
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup nuget
        uses: nuget/setup-nuget@v1
      - name: Setup nuget local source
        run: |
          nuget source add -source "`pwd`/Nuget_Source" -name "Local"
      - name: Setup godot
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.${RELEASE_NAME}.mono ~/.local/share/godot/templates/${GODOT_VERSION}.${RELEASE_NAME}.mono
      - name: Download common library
        uses: actions/download-artifact@v2
        with:
          name: common-library-build-Release
          path: Nuget_Source
      - name: Build
        run: |
          mkdir -v -p build/Windows
          cd Godot
          godot -v --export "Windows Desktop" ../build/Windows/Godot.exe
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Godot-build
          path: build/Windows/

  #
  # Build Monogame sample
  #
  monogame-sample-build:
    needs: common-library-build
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      - name: Setup nuget local source
        run: |
          dotnet nuget add source "${{ github.workspace }}\Nuget_Source" -n "Local"
      - name: Download common library
        uses: actions/download-artifact@v2
        with:
          name: common-library-build-Release
          path: Nuget_Source
      - name: Build
        run: |
          dotnet build Monogame/MyGame.sln -c Release
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Monogame-build
          path: |
            Monogame/bin/Release/
          if-no-files-found: error

  #
  # Build Stride sample
  #
  stride-sample-build:
    needs: common-library-build
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: |
            5.0.x
            6.0.x
      - name: Setup nuget local source
        run: |
          dotnet nuget add source "https://packages.stride3d.net/nuget" -n "Stride"
          dotnet nuget add source "${{ github.workspace }}\Nuget_Source" -n "Local"
      - name: Download common library
        uses: actions/download-artifact@v2
        with:
          name: common-library-build-Release
          path: Nuget_Source
      - name: Build
        run: |
          dotnet build Stride/MyGame.sln -c Release --no-self-contained
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Stride-build
          path: |
            Stride/Bin/
          if-no-files-found: error

  #
  # Build Unity project
  #
  unity-build:
    needs: common-library-build
    runs-on: ubuntu-latest
    container:
      image: unityci/editor:2020.3.26f1-windows-mono-0
    env:
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Activate Unity license
        run: ./scripts/activate-unity-license.sh
      - name: Download common library
        uses: actions/download-artifact@v2
        with:
          name: common-library-build-Release
          path: packages
      - name: Setup dependencies
        run: |
          apt-get update
          apt-get install -y unzip
          curl -L https://www.nuget.org/api/v2/package/System.Runtime.CompilerServices.Unsafe -o packages/System.Runtime.CompilerServices.Unsafe.nupkg
          unzip -p packages/System.Runtime.CompilerServices.Unsafe.nupkg lib/netstandard2.0/*.dll > Unity/Assets/Plugins/System.Runtime.CompilerServices.Unsafe.dll
          unzip -p packages/Fragcolor.Chainblocks.Common.*.nupkg lib/netstandard2.0/*.dll > Unity/Assets/Plugins/Fragcolor.Chainblocks.Common.dll
      - uses: actions/cache@v2
        with:
          path: Unity/Library
          key: Unity-Library-${{ hashFiles('Unity/Assets/**', 'Unity/Packages/**', 'Unity/ProjectSettings/**') }}
          restore-keys: |
            Unity-Library-
      - name: Build project
        run: |
          unity-editor -quit -logFile /dev/stdout -projectPath Unity -buildWindows64Player build/MyGame.exe
      - uses: actions/upload-artifact@v2
        with:
          name: Unity-build
          path: Unity/build/
